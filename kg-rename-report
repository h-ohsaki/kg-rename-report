#!/usr/bin/env python3
#
# Copy report files download from LUNA (Blackboard variant) in normalized names.
# Copyright (c) 2020, Hiroyuki Ohsaki.
# All rights reserved.
#

import os
import re
import shutil
import sys
import tkinter
import tkinter.filedialog
import tkinter.messagebox

from perlcompat import die, warn, getopts

def usage():
    die(f"""\
usage: {sys.argv[0]} [-v] [file...]
  -v    verbose mode
""")

def pick_files():
    # hide tkinter root window
    root = tkinter.Tk()
    root.withdraw()
    return tkinter.filedialog.askopenfilenames(
        title="Select report files to normalize")

def lookup_attribs(dir_, code):
    attr_file = os.path.join(dir_, f'{code}.txt')
    try:
        with open(attr_file, encoding='sjis') as f:
            for line in f:
                line = line.rstrip()
                # NOTE: this code depends the format of TXT files in assigmentDL.zip
                m = re.match(r'名前:(.+?) (.+) (.+?)$', line)
                if m:
                    name, name_kana, login = m.groups()
                    # replace zenkaku space with hanakaku
                    name = name.replace('　', ' ')
                    return name, login
    except FileNotFoundError:
        pass
    return None, None

def normalize_path(path):
    dir_ = os.path.dirname(path)
    base = os.path.basename(path)
    m = re.match(r'(\d{8})-(.+)\.(.+?)$', base)
    if m:
        code, body, ext = m.groups()
        name, login = lookup_attribs(dir_, code)
        return f'report-{code}-{login}-{name}.{ext}'
    return path

def main():
    opt = getopts('v') or usage()
    verbose = opt.v

    files = sys.argv[1:]
    if not files:
        files = pick_files()
    for path in files:
        newpath = normalize_path(path)
        if newpath != path:
            shutil.copyfile(path, newpath)

if __name__ == "__main__":
    main()
